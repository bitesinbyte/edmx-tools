@inherits LayoutComponentBase
@inject IJSRuntime JSRuntime
@inject NavigationManager _nav
@inject TooltipService tooltipService
<RadzenComponents />
<RadzenLayout>
    <RadzenHeader>
        <ChildContent>
            <RadzenRow AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Start" Gap="0px">
                <RadzenColumn Size="5">
                    <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" Gap="0">
                        <RadzenSidebarToggle Click="@(() => sidebarExpanded = !sidebarExpanded)" />
                        <RadzenImage Path="favicons/android-chrome-512x512.png" Style="width: 1rem;"
                            AlternateText="Bites In Byte" />
                        <RadzenLabel Text="ites In Byte - Edmx Tools" />
                    </RadzenStack>
                </RadzenColumn>
                <RadzenColumn Size="7">
                    <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center"
                        JustifyContent="JustifyContent.End">
                        <RadzenToggleButton Click=@ToggleMode Icon="@modeIcon" ButtonStyle="ButtonStyle.Light"
                            Variant="Variant.Outlined" Shade="Shade.Lighter"
                            InputAttributes="@(new Dictionary<string,object>(){ { "aria-label", "ToggleButton with image" }})" />
                        <RadzenButton Click="@(()=>_nav.NavigateTo("https://www.bitesinbyte.com"))" Icon="public"
                            Variant="Variant.Outlined" ButtonStyle="ButtonStyle.Light" Shade="Shade.Lighter" />
                        <a href="https://github.com/bitesinbyte/edmx-tools" title="GitHub" target="_blank"
                            class="rz-mx-4">
                            <svg width="24" height="24" viewBox="0 0 512 499.36" xmlns="http://www.w3.org/2000/svg">
                                <title>GitHub</title>
                                <path fill-rule="evenodd"
                                    d="M256 0C114.64 0 0 114.61 0 256c0 113.09 73.34 209 175.08 242.9 12.8 2.35 17.47-5.56 17.47-12.34 0-6.08-.22-22.18-.35-43.54-71.2 15.49-86.2-34.34-86.2-34.34-11.64-29.57-28.42-37.45-28.42-37.45-23.27-15.84 1.73-15.55 1.73-15.55 25.69 1.81 39.21 26.38 39.21 26.38 22.84 39.12 59.92 27.82 74.5 21.27 2.33-16.54 8.94-27.82 16.25-34.22-56.84-6.43-116.6-28.43-116.6-126.49 0-27.95 10-50.8 26.35-68.69-2.63-6.48-11.42-32.5 2.51-67.75 0 0 21.49-6.88 70.4 26.24a242.65 242.65 0 0 1 128.18 0c48.87-33.13 70.33-26.24 70.33-26.24 14 35.25 5.18 61.27 2.55 67.75 16.41 17.9 26.31 40.75 26.31 68.69 0 98.35-59.85 120-116.88 126.32 9.19 7.9 17.38 23.53 17.38 47.41 0 34.22-.31 61.83-.31 70.23 0 6.85 4.61 14.81 17.6 12.31C438.72 464.97 512 369.08 512 256.02 512 114.62 397.37 0 256 0z">
                                </path>
                            </svg>
                        </a>
                        <RadzenButton Click="@(()=>_nav.NavigateTo("https://blogs.bitesinbyte.com"))" Icon="article"
                            Variant="Variant.Outlined" ButtonStyle="ButtonStyle.Light" Shade="Shade.Lighter" />
                        <RadzenButton Click="@(()=>_nav.NavigateTo("https://links.bitesinbyte.com"))" Icon="share"
                            Variant="Variant.Outlined" ButtonStyle="ButtonStyle.Light" Shade="Shade.Lighter" />
                    </RadzenStack>
                </RadzenColumn>
            </RadzenRow>
        </ChildContent>

    </RadzenHeader>
    <RadzenSidebar Responsive="false" Style="width: max-content">
        <RadzenPanelMenu
            DisplayStyle="@(sidebarExpanded ? MenuItemDisplayStyle.IconAndText : MenuItemDisplayStyle.Icon)"
            ShowArrow="false">
            <RadzenPanelMenuItem Text="Home" Icon="home" Path="/" />
            <RadzenPanelMenuItem Text="Tools" Icon="build" Expanded="true">
                <RadzenPanelMenuItem Text="Trim" Path="trim" Icon="content_cut"
                    MouseEnter="@(args => ShowTooltip(args,"Trim Edmx", new TooltipOptions(){ Position = TooltipPosition.Right }))" />
                <RadzenPanelMenuItem Text="Explore" Path="explore" Icon="explore"
                    MouseEnter="@(args => ShowTooltip(args,"Explore Edmx", new TooltipOptions(){ Position = TooltipPosition.Right }))" />
                <RadzenPanelMenuItem Text="OpenApi - JSON" Path="convert?type=open-api-json" Icon="settings"
                    MouseEnter="@(args => ShowTooltip(args,"Edmx to Open Api JSON", new TooltipOptions(){ Position = TooltipPosition.Right }))" />
                <RadzenPanelMenuItem Text="OpenApi - YML" Path="convert?type=open-api-yml" Icon="settings"
                    MouseEnter="@(args => ShowTooltip(args,"Edmx to Open Api YML", new TooltipOptions(){ Position = TooltipPosition.Right }))" />
            </RadzenPanelMenuItem>
        </RadzenPanelMenu>
    </RadzenSidebar>
    <RadzenSidebar Style="width: 300px; grid-area: rz-right-sidebar">
        <amp-ad layout="fixed" width="300" height="800" type="adsense" data-ad-client="ca-pub-2889277787752693"
            data-ad-slot="6953143319">
        </amp-ad>
    </RadzenSidebar>
    <RadzenBody>
        <div class="rz-p-4">
            @Body
        </div>
    </RadzenBody>
    <RadzenFooter>
        <ChildContent>
            <RadzenRow AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Start" Gap="0px">
                <RadzenColumn Size="8">
                    Copyright (c) @(DateTime.UtcNow.Year) <strong>bitesinbyte.com</strong> | <strong> <a
                            href="https://github.com/bitesinbyte/edmx-tools/blob/main/LICENSE" target="_blank">MIT
                            License</a></strong>
                </RadzenColumn>
                <RadzenColumn Size="4">
                    Special thanks to <strong><a href="https://github.com/shashisadasivan"
                            target="_blank">shashisadasivan</a></strong> for <strong>EDMXTrimmer</strong> code
                    and insperation ❤️
                </RadzenColumn>
            </RadzenRow>
        </ChildContent>
    </RadzenFooter>
</RadzenLayout>
@code {
    bool sidebarExpanded = false;
    string modeIcon = "dark_mode";
    void ShowTooltip(ElementReference elementReference, string content, TooltipOptions options = null) =>
    tooltipService.Open(elementReference, content, options);
    async Task ToggleMode()
    {
        if (modeIcon == "light_mode")
        {
            modeIcon = "dark_mode";
            await JSRuntime.InvokeVoidAsync("applyLight");
        }
        else
        {
            modeIcon = "light_mode";
            await JSRuntime.InvokeVoidAsync("applyDark");
        }
    }
}